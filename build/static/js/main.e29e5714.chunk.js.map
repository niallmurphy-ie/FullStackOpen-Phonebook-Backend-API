{"version":3,"sources":["components/Search.js","services/phonebook.js","components/AddForm.js","components/Person.js","components/Results.js","components/Notification.js","App.js","index.js"],"names":["Search","searchTerm","handleSearchChange","value","onChange","baseUrl","Phonebook","getRecords","axios","get","then","response","data","postRecord","record","post","deleteRecord","id","delete","updateRecord","newRecord","put","AddForm","newName","handleNumberChange","newNumber","handleNameChange","handleNameAdd","onSubmit","type","Person","person","handleRecordDelete","name","number","onClick","Results","searchResults","persons","length","map","style","background","color","fontStyle","fontSize","padding","border","Notification","message","notificationStyle","className","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setSearchResults","notification","setNotification","useEffect","setTimeout","getNumbers","initialRecords","newPhoneBookRecord","returnedRecord","concat","updatePhoneBookRecord","window","confirm","catch","nameExists","filter","event","term","target","results","toLowerCase","includes","preventDefault","console","log","alert","exists","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e29e5714.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Search = ({ searchTerm, handleSearchChange }) => {\r\n\treturn (\r\n\t  <div>\r\n\t\t Filter using: <input value={searchTerm} onChange={handleSearchChange} />\r\n\t  </div>\r\n\t)\r\n }\r\n\r\nexport default Search","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getRecords = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst postRecord = record => {\r\n\tconst request = axios.post(baseUrl, record);\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst updateRecord = (id, newRecord) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newRecord);\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst deleteRecord = id => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`);\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst Phonebook = { getRecords, postRecord, deleteRecord, updateRecord }\r\nexport default Phonebook","import React from \"react\"\r\n\r\nconst AddForm = ({ newName, handleNumberChange, newNumber, handleNameChange, handleNameAdd }) => {\r\n\treturn (\r\n\t  <form  onSubmit={handleNameAdd}>\r\n\t\t <div>\r\n\t\t\tname: <input value={newName} onChange={handleNameChange} type=\"text\" />\r\n\t\t </div>\r\n\t\t <div>\r\n\t\t\tnumber: <input value={newNumber} onChange={handleNumberChange} type=\"text\" />\r\n\t\t </div>\r\n\t\t <div>\r\n\t\t\t<button type=\"submit\">add</button>\r\n\t\t </div>\r\n\t  </form>\r\n\t)\r\n }\r\n\r\nexport default AddForm","import React from \"react\";\r\n\r\nconst Person = ({ person, handleRecordDelete }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{person.name}: {person.number} <button onClick={() => handleRecordDelete(person.id)}>delete</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from \"./Person\"\r\n\r\nconst Results = ({ searchResults, persons, handleRecordDelete, searchTerm }) => {\r\n\tif (searchResults.length === 0 && searchTerm.length > 0) {\r\n\t\treturn (\r\n\t\t\t<div>There are no results for this search term</div>\r\n\t\t)\r\n\t}\r\n\tif (searchResults.length > 0) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{searchResults.map(person => {\r\n\t\t\t\t\treturn <Person key={person.id} person={person} handleRecordDelete={handleRecordDelete} />\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\tif (searchResults.length === 0 && searchTerm.length === 0) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{persons.map(person => {\r\n\t\t\t\t\treturn <Person key={person.id} person={person} handleRecordDelete={handleRecordDelete} />\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Results;","import React from \"react\"\r\n\r\nconst Notification = ({ message, type }) => {\r\n\r\n\tconst notificationStyle = style(type)\r\n\tif (message === null || message === \"\") {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={notificationStyle} className={type}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst style = (type) => {\r\n\tswitch (type) {\r\n\t\tcase \"success\":\r\n\t\t\treturn {\r\n\t\t\t\tbackground: 'lightgreen',\r\n\t\t\t\tcolor: 'green',\r\n\t\t\t\tfontStyle: 'italic',\r\n\t\t\t\tfontSize: '16px',\r\n\t\t\t\tpadding: '20px',\r\n\t\t\t\tborder: 'solid 5px'\r\n\t\t\t}\r\n\t\tcase \"error\":\r\n\t\t\treturn {\r\n\t\t\t\tbackground: 'lightred',\r\n\t\t\t\tcolor: 'red',\r\n\t\t\t\tfontStyle: 'italic',\r\n\t\t\t\tfontSize: '16px',\r\n\t\t\t\tpadding: '20px',\r\n\t\t\t\tborder: 'solid 5px'\r\n\t\t\t}\r\n\t\tdefault: return {}\r\n\t}\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Search from './components/Search'\r\nimport Phonebook from './services/phonebook'\r\nimport AddForm from './components/AddForm'\r\nimport Results from './components/Results'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [notification, setNotification] = useState({\r\n    message: \"\", type: \"\"\r\n  })\r\n\r\n  // Add timer to notifications\r\n  const addNotificationtimer = () => {\r\n    if (notification.message !== \"\") {\r\n      setTimeout(() => {\r\n        setNotification({\r\n          message: \"\",\r\n          type: \"\"\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n  useEffect(addNotificationtimer, [notification]);\r\n\r\n  // Search\r\n  const handleSearchChange = event => {\r\n    const term = event.target.value;\r\n    const results = persons.filter(person => person.name.toLowerCase().includes(term.toLowerCase()))\r\n    setSearchTerm(term);\r\n    setSearchResults(results);\r\n  }\r\n\r\n  // Handle Inputs\r\n  const handleNameChange = event => setNewName(event.target.value)\r\n  const handleNumberChange = event => setNewNumber(event.target.value)\r\n\r\n  // Get records\r\n  const getNumbers = () => {\r\n    Phonebook.getRecords()\r\n      .then(initialRecords => setPersons(initialRecords))\r\n  };\r\n  useEffect(getNumbers, []);\r\n\r\n  // Empty searchResults if persons changes by adding / editing\r\n  const clearSearch = () => {\r\n    setSearchResults([])\r\n    setSearchTerm(\"\")\r\n    setNewName(\"\")\r\n    setNewNumber(\"\")\r\n  }\r\n  useEffect(clearSearch, [persons])\r\n\r\n  // Handle new record | Create or Update\r\n  const handleNameAdd = event => {\r\n    event.preventDefault();\r\n    console.log(\"EVENT TARGET\", event.target)\r\n    if (newName === \"\" || newNumber === \"\") alert('Please enter a name and number');\r\n    const record = { name: newName, number: newNumber };\r\n    const exists = nameExists();\r\n    exists.length > 0 ? updatePhoneBookRecord(exists[0].id, record) : newPhoneBookRecord(record);\r\n  }\r\n\r\n  // New Record\r\n  const newPhoneBookRecord = record => {\r\n    Phonebook.postRecord(record)\r\n      .then(returnedRecord => {\r\n        setPersons(persons.concat(returnedRecord));\r\n        setNotification({\r\n          message: `A record has been created for ${returnedRecord.name}`,\r\n          type: \"success\"\r\n        })\r\n      });\r\n  }\r\n\r\n  // Update Record\r\n  const updatePhoneBookRecord = (id, record) => {\r\n    if (!window.confirm(`${record.name} has already been added. Do you want to update this person's number?`)) return;\r\n    Phonebook.updateRecord(id, record)\r\n      .then(returnedRecord => {\r\n        setPersons(persons.map(person => {\r\n          return person.id === id ? returnedRecord : person\r\n        }))\r\n        setNotification({\r\n          message: `${returnedRecord.name}'s record has been updated.`,\r\n          type: \"success\"\r\n        })\r\n      })\r\n      .catch(() => {\r\n        setNotification({\r\n          message: `This record has already been deleted.`,\r\n          type: \"error\"\r\n        })\r\n        getNumbers();\r\n      })\r\n  }\r\n\r\n  // Delete Record\r\n  const handleRecordDelete = id => {\r\n    const personToDelete = persons.filter(person => id === person.id)\r\n    if (!window.confirm(`Delete ${personToDelete[0].name}?`)) return\r\n    Phonebook.deleteRecord(id)\r\n      .then(() => {\r\n        setPersons(persons.filter(\r\n          person => person.id !== id ? person : null\r\n        ))\r\n        setNotification({\r\n          message: `Record has been deleted`,\r\n          type: \"success\"\r\n        })\r\n      })\r\n      .catch(() => {\r\n        setNotification({\r\n          message: `This record has already been deleted.`,\r\n          type: \"error\"\r\n        })\r\n        getNumbers();\r\n      })\r\n  }\r\n\r\n  /**\r\n * Check if name exists\r\n * @returns Array of records with existing name\r\n */\r\n  const nameExists = () => persons.filter(person => person.name === newName)\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={notification.message} type={notification.type} />\r\n      <h3>Search</h3>\r\n      <Search searchTerm={searchTerm} handleSearchChange={handleSearchChange} />\r\n      <h2>Add Record</h2>\r\n      <AddForm\r\n        newName={newName}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNameAdd={handleNameAdd}\r\n      />\r\n      <h3>Results</h3>\r\n      <Results searchResults={searchResults} persons={persons}\r\n        handleRecordDelete={handleRecordDelete} searchTerm={searchTerm} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}